// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  authid             String         @id
  whitelist          String         @default("[]") // whitelisted bookmakers to display
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  region             String?        @default("UK")
  phone              String?
  email              String? // used only for email notis
  smsNotifications   Boolean        @default(false)
  emailNotifications Boolean        @default(false)
  banned             Boolean        @default(false)
  staff              Boolean        @default(false)
  trialActivated     Boolean        @default(false)
  cancelDealActivated Boolean       @default(false)
  promotions         Boolean        @default(true)
  placedBets         PlacedBets[]
  subscription       Subscription[]
}

model Bet {
  id        Int      @id @default(autoincrement())
  type      String   @default("arbitrage") // arv, ev
  data      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PlacedBets {
  id               Int      @id @default(autoincrement())
  userId           String
  type             String   @default("arbitrage") // arbitrage, ev
  status           Int      @default(0) // 0 pending, 1 won, 2 lost
  matchName        String
  totalStake       Float
  profitPercentage Float
  bookmakers       String   @default("[]") // ["Betfair", "Bet365", etc...]
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User     @relation(fields: [userId], references: [authid])
}

model Subscription {
  id                   Int       @id @default(autoincrement())
  userId               String
  plan                 String
  planExpiresAt        DateTime
  paypalSubscriptionId String    @unique
  status               String    @default("inactive") // inactive, active, paused, payment_failed, cancelled
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  user                 User      @relation(fields: [userId], references: [authid])
}

model SignupDeal {
  id        Int      @id @default(autoincrement())
  deal      String
  link      String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Bookmaker {
  id       Int    @id @default(autoincrement())
  bookName String @unique
}
